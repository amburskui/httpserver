{{ if .Values.migration.auto }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-dbmigrate-job
  labels:
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  activeDeadlineSeconds: 60
  backoffLimit: 2
  template:
    spec:
      initContainers:
        - name: wait-postgres
          image: postgres:15-alpine
          command:
            - sh
            - -ec
            - |
              until (pg_isready -h $(DATABASE_HOST) -p $(DATABASE_PORT) -U $(DATABASE_USERNAME)); do
                sleep 1
              done
          resources:
            limits:
              cpu: 50m
              memory: 50Mi
          env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: database.host
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: database.port
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: database.username
      containers:
        - name: {{ .Release.Name }}-migrations
          image: {{ .Values.migration.image.repository }}:{{ .Values.migration.image.tag }}
          command: ["/usr/bin/migrate"]
          args: ["-path", "/app/", "-database", "$(CONNECTION_STRING)", "up"]
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: database.host
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: database.port
            - name: DATABASE_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-configmap
                  key: database.database
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: database.username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}-secret
                  key: database.password
            - name: CONNECTION_STRING
              value: "postgres://$(DATABASE_USERNAME):$(DATABASE_PASSWORD)@$(DATABASE_HOST):$(DATABASE_PORT)/$(DATABASE_DATABASE)?sslmode=disable"
      restartPolicy: Never
{{ end }}